* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* By adding an overflow: hidden declaration to a container
 div, weâ€™re telling it to recognize the height of any 
 floated elements it contains. This is how we can add a 
 background color to our .page element and have it 
 actually render: */
.page {
  width: 900px;
  margin: 0 auto;
}
.container {
  overflow: hidden;
  background-color: #eaedf0;
}
.menu {
  height: 100px;
  background-color: #b2d6ff; /* Medium blue */
}

.sidebar {
  float: left;
  width: 200px;
  height: 300px;
  background-color: #f09a9d; /* Red */
}

.content {
  float: left;
  width: 650px;
  height: 500px;
  background-color: #f5cf8e; /* Yellow */
}

/* clear is needed if footer is inside the .page */
/* .footer {
  clear: both;
  height: 200px;
  background-color: #d6e9fe;
} */

.footer {
  overflow: hidden;
  background-color: #d6e9fe;
}
/* if a block is float it height doesn't count */

/* To summarize, when you have an extra unfloated HTML 
element at the bottom of a container div, use the clear 
solution. Otherwise, add an overflow: hidden declaration
to the container element. The underlying idea for both 
options is that you need a way to tell the browser to 
incorporate floats into the height of their container 
element in order for their backgrounds to show up. */

.column {
  float: left;
  width: 31%;
  margin: 20px 1.15%;
  height: 160px;
  background-color: #b2d6ff; /* Medium blue */
}

.content {
  padding: 20px;
}

.article-image {
  float: left;
  width: 300px;
  height: 200px;
  margin-right: 20px;
  margin-bottom: 20px;
}

p {
  margin-bottom: 20px;
}

.avatar {
  float: left;
  width: 60px;
  height: 60px;
  margin: 25px;
  border-radius: 40px;
  background-color: #d6e9fe;
}

.username {
  margin-top: 30px;
}

.comment {
  margin: 10px;
  overflow: hidden; /* This is important */
}
